load('trained_classifier')

x1all = load('class_1','-ascii'); % setosa
x2all = load('class_2','-ascii'); % versicolor
x3all = load('class_3','-ascii'); % virginica

%% Classification of training set

x1train = x1all(1:N_train, :);
x2train = x2all(1:N_train, :);
x3train = x3all(1:N_train, :);

x_all_train = [x1train; x2train; x3train]';
t_all_train = [repmat([1 0 0],N_train,1); repmat([0 1 0],N_train,1); repmat([0 0 1],N_train,1)]';

x_vec = [x_all_train', ones(C*N_train,1)]';

z = W * x_vec;
g = 1./(1+exp(-z));


testset_class = zeros(1,60);
testset_class_estimated = zeros(1,60);

for t = 1:90
    for c = 1:3
        if t_all_train(c,t) == max(t_all_train(:,t))
           testset_class(t) = c; 
        end
        if g(c,t) == max(g(:,t))
           testset_class_estimated(t) = c;
        end
    end
end

% 
% x1test = x1all(N_train+1:50, :);
% x2test = x2all(N_train+1:50, :);
% x3test = x3all(N_train+1:50, :);
% 
% x_all_test = [x1test; x2test; x3test]';
% t_all_test = [repmat([1 0 0],(50-N_train),1); repmat([0 1 0],(50-N_train),1); repmat([0 0 1],(50-N_train),1)]';
% 
% 
% 
% 
% fprintf('Training with %i iterations, alpha = %f\n', NumIterations, alpha);
% fprintf('After the classifier training, %i of the %i flowers in the training set are classified correctly.\n', ...
%     C*N_train-sum(sum(((g==(max(g))) - t) ==1)),...
%     C*N_train ...
% );
% 
% trainset_num = zeros(1,length(x_all_test));
% trainset_num_estimated = zeros(1,length(x_all_test));
% 
% for t = 1:60
%     for c = 1:3
%         if t_all_test(c,t) == max(t_all_test(:,t))
%            testset_num(t) = c-1; 
%         end
%         if g(c,t) == max(g(:,t))
%            testset_num_estimated(t) = c-1;
%         end
%     end
% end
% 
% % Tester pï¿½ testsettet:
% x_vec = [x_all_test', ones((C*(50-N_train)),1)]';
% z = W * x_vec;
% g = 1./(1+exp(-z)); % Squashing function
%         
% 
% fprintf('After the classifier training, %i of the %i flowers in the test set are classified correctly.\n\n', ...
%     C*(50-N_train)-sum(sum(((g==(max(g))) - t_all_test) ==1)),...
%     C*(50-N_train) ...
% );
% 
% 
% % Extracting results
% testset_num = zeros(1,length(x_all_test));
% testset_num_estimated = zeros(1,length(x_all_test));
% for t = 1:60
%     for c = 1:3
%         if t_all_train(c,t) == max(t_all_train(:,t))
%            trainset_num(t) = c-1; 
%         end
%         if t_all_test(c,t) == max(t_all_test(:,t))
%            testset_num(t) = c-1; 
%         end
%         if g(c,t) == max(g(:,t))
%            testset_num_estimated(t) = c-1;
%         end
%     end
% end